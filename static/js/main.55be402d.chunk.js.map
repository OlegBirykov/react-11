{"version":3,"sources":["actions/actionTypes.js","actions/actionCreators.js","components/ServiceAdd.js","components/ServiceList.js","App.js","serviceWorker.js","reducers/serviceList.js","reducers/serviceAdd.js","store/index.js","index.js"],"names":["FETCH_SERVICES_REQUEST","FETCH_SERVICES_FAILURE","FETCH_SERVICES_SUCCESS","DELETE_SERVICE_REQUEST","DELETE_SERVICE_FAILURE","DELETE_SERVICE_SUCCESS","EDIT_SERVICE_REQUEST","EDIT_SERVICE_FAILURE","EDIT_SERVICE_SUCCESS","CHANGE_SERVICE_FIELD","ADD_SERVICE_REQUEST","ADD_SERVICE_FAILURE","ADD_SERVICE_SUCCESS","ADD_SERVICE_FINISH","deleteServiceRequest","id","type","payload","deleteServiceSuccess","addServiceFailure","addingError","fetchServices","dispatch","a","fetch","process","response","ok","Error","statusText","json","data","items","error","message","deleteService","method","editService","item","loadingError","addService","name","addServiceRequest","price","content","headers","body","JSON","stringify","ServiceAdd","props","history","match","useSelector","state","serviceAdd","loading","adding","finish","useDispatch","useEffect","params","push","handleChange","evt","target","value","changeServiceField","className","onClick","viewBox","cx","cy","r","fill","onSubmit","preventDefault","service","trim","Math","trunc","isNaN","disabled","onChange","ServiceList","serviceList","deletingFinish","map","o","deleting","isDeleted","App","path","component","to","Boolean","window","location","hostname","initialState","reducer","combineReducers","action","result","reduce","flag","store","createStore","__REDUX_DEVTOOLS_EXTENSION__","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.55be402d.chunk.js","sourcesContent":["export const FETCH_SERVICES_REQUEST = 'FETCH_SERVICES_REQUEST';\nexport const FETCH_SERVICES_FAILURE = 'FETCH_SERVICES_FAILURE';\nexport const FETCH_SERVICES_SUCCESS = 'FETCH_SERVICES_SUCCESS';\n\nexport const DELETE_SERVICE_REQUEST = 'DELETE_SERVICE_REQUEST';\nexport const DELETE_SERVICE_FAILURE = 'DELETE_SERVICE_FAILURE';\nexport const DELETE_SERVICE_SUCCESS = 'DELETE_SERVICE_SUCCESS';\n\nexport const EDIT_SERVICE_REQUEST   = 'EDIT_SERVICE_REQUEST';\nexport const EDIT_SERVICE_FAILURE   = 'EDIT_SERVICE_FAILURE';\nexport const EDIT_SERVICE_SUCCESS   = 'EDIT_SERVICE_SUCCESS';\n\nexport const CHANGE_SERVICE_FIELD   = 'CHANGE_SERVICE_FIELD';\n\nexport const ADD_SERVICE_REQUEST    = 'ADD_SERVICE_REQUEST';\nexport const ADD_SERVICE_FAILURE    = 'ADD_SERVICE_FAILURE';\nexport const ADD_SERVICE_SUCCESS    = 'ADD_SERVICE_SUCCESS';\nexport const ADD_SERVICE_FINISH     = 'ADD_SERVICE_FINISH';\n","import {\n  FETCH_SERVICES_REQUEST,\n  FETCH_SERVICES_FAILURE,\n  FETCH_SERVICES_SUCCESS,\n  DELETE_SERVICE_REQUEST,\n  DELETE_SERVICE_FAILURE,\n  DELETE_SERVICE_SUCCESS,\n  EDIT_SERVICE_REQUEST,\n  EDIT_SERVICE_FAILURE,\n  EDIT_SERVICE_SUCCESS,\n  CHANGE_SERVICE_FIELD,\n  ADD_SERVICE_REQUEST,\n  ADD_SERVICE_FAILURE,\n  ADD_SERVICE_SUCCESS,\n  ADD_SERVICE_FINISH,\n} from './actionTypes';\n\nexport const fetchServicesRequest = () => ({\n  type: FETCH_SERVICES_REQUEST,\n});\n\nexport const fetchServicesFailure = error => ({\n  type: FETCH_SERVICES_FAILURE,\n  payload: {\n    error,\n  },\n});\n\nexport const fetchServicesSuccess = items => ({\n  type: FETCH_SERVICES_SUCCESS,\n  payload: {\n    items,\n  },\n});\n\nexport const deleteServiceRequest = id => ({\n  type: DELETE_SERVICE_REQUEST,\n  payload: {\n    id,\n  },\n});\n\nexport const deleteServiceFailure = error => ({\n  type: DELETE_SERVICE_FAILURE,\n  payload: {\n    error,\n  },  \n});\n\nexport const deleteServiceSuccess = id => ({\n  type: DELETE_SERVICE_SUCCESS,\n  payload: {\n    id,\n  },\n});\n\nexport const editServiceRequest = () => ({\n  type: EDIT_SERVICE_REQUEST,\n});\n\nexport const editServiceFailure = loadingError => ({\n  type: EDIT_SERVICE_FAILURE,\n  payload: {\n    loadingError,\n  },  \n});\n\nexport const editServiceSuccess = item => ({\n  type: EDIT_SERVICE_SUCCESS,\n  payload: {\n    item,\n  },\n});\n\nexport const changeServiceField = (name, value) => ({\n  type: CHANGE_SERVICE_FIELD,\n  payload: {\n    name,\n    value,\n  },\n});\n\nexport const addServiceRequest = (name, price, content) => ({\n  type: ADD_SERVICE_REQUEST,\n  payload: {\n    name,\n    price,\n    content,\n  },\n})\n\nexport const addServiceFailure = addingError => ({\n  type: ADD_SERVICE_FAILURE,\n  payload: {\n    addingError,\n  },\n});\n\nexport const addServiceSuccess = () => ({\n  type: ADD_SERVICE_SUCCESS,\n});\n\nexport const addServiceFinish = () => ({\n  type: ADD_SERVICE_FINISH,\n});\n\nexport const fetchServices = async dispatch => {\n  dispatch(fetchServicesRequest());\n  try {\n    const response = await fetch(`${process.env.REACT_APP_API_URL}`)\n    if (!response.ok) {\n      throw new Error(response.statusText);\n    }\n    const data = await response.json();\n    dispatch(fetchServicesSuccess(data));\n  } catch (e) {\n    dispatch(fetchServicesFailure(e.message));\n  }\n}\n\nexport const deleteService = async (dispatch, id) => {\n  dispatch(deleteServiceRequest(id));\n  try {\n    const response = await fetch(`${process.env.REACT_APP_API_URL}/${id}`, {\n      method: 'DELETE',\n    })\n    if (!response.ok) {\n      throw new Error(response.statusText);\n    }\n    dispatch(deleteServiceSuccess(id));\n  } catch (e) {\n    dispatch(deleteServiceFailure(e.message));\n  }\n}\n\nexport const editService = async (dispatch, id) => {\n  dispatch(editServiceRequest());\n  try {\n    const response = await fetch(`${process.env.REACT_APP_API_URL}/${id}`)\n    if (!response.ok) {\n      throw new Error(response.statusText);\n    }\n    const data = await response.json();\n    dispatch(editServiceSuccess(data));\n  } catch (e) {\n    dispatch(editServiceFailure(e.message));\n  }\n}\n\nexport const addService = async (dispatch, item) => {\n  dispatch(addServiceRequest());\n  try {\n    const response = await fetch(`${process.env.REACT_APP_API_URL}`, {\n      method: 'POST',\n      headers: { 'Content-Type': 'application/json' },\n      body: JSON.stringify(item),\n    })\n    if (!response.ok) {\n      throw new Error(response.statusText);\n    }\n    dispatch(addServiceSuccess());\n  } catch (e) {\n    dispatch(addServiceFailure(e.message));\n  }\n  fetchServices(dispatch);\n}\n\n","import {useEffect} from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { changeServiceField, editService, addService, addServiceFailure, addServiceFinish } from '../actions/actionCreators';\n\nfunction ServiceAdd(props) {\n  const { history, match } = props;\n  const { item, loading, loadingError, adding, addingError, finish } = useSelector(state => state.serviceAdd);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    editService(dispatch, match.params.id);\n  }, [dispatch, match.params.id]);\n\n  useEffect(() => {\n    if (finish) {\n      dispatch(addServiceFinish());\n      history.push(process.env.PUBLIC_URL + '/services');      \n    };\n  // eslint-disable-next-line\n  }, [finish]);\n\n  const handleError = () => {\n    editService(dispatch, match.params.id);\n  }\n\n  const handleChange = evt => {\n    const { name, value } = evt.target;\n    dispatch(changeServiceField(name, value));\n  };\n\n  const handleCancel = () => {\n    history.push(process.env.PUBLIC_URL + '/services');\n  }\n\n  const handleSubmit = evt => {\n    evt.preventDefault();\n    const service = {\n      id: item.id,\n      name: item.name.trim(),\n      price: typeof(item.price) === 'string' ? item.price.trim() : item.price,\n      content: item.content.trim(),\n    }\n\n    if (!service.name) {\n      dispatch(addServiceFailure('Поле \"Название\" не должно быть пустым'));\n      return;\n    }\n\n    if (!service.price) {\n      dispatch(addServiceFailure('В поле \"Стоимость\" должно быть целое положительное число без пробелов'));\n      return;\n    }\n\n    service.price = Math.trunc(+service.price);\n\n    if (isNaN(service.price) || service.price <= 0) {\n      dispatch(addServiceFailure('В поле \"Стоимость\" должно быть целое положительное число без пробелов'));\n      return;      \n    } \n\n    addService(dispatch, service);\n  }\n\n  if (loadingError) {\n    return (\n      <>\n        <p className=\"error\">{loadingError}</p>\n        <button className=\"error-button\" onClick={handleError}>Попробовать ещё раз</button>\n      </>\n    )\n  }\n\n  if (loading) {\n    return (\n      <svg className=\"spinner ServiceAdd-spinner\" viewBox=\"0 0 50 50\">\n        <circle className=\"spinner-circle ServiceAdd-spinner-circle\" cx=\"25\" cy=\"25\" r=\"20\" fill=\"none\"></circle>\n      </svg>\n    )\n  }\n\n  return (\n    <form className=\"ServiceAdd\" onSubmit={handleSubmit}>\n      <label>\n        Название\n        <input name='name' disabled={adding} onChange={handleChange} value={item.name} />\n      </label>\n      <label>\n        Стоимость\n        <input name='price' disabled={adding} onChange={handleChange} value={item.price} />\n      </label>\n      <label>\n        Описание\n        <input name='content' disabled={adding} onChange={handleChange} value={item.content} />\n      </label>\n      <div className=\"ServiceAdd-buttons\">\n        <button \n          className={adding ? 'ServiceAdd-button-cancel button-disabled' : 'ServiceAdd-button-cancel'} \n          onClick={handleCancel} \n          disabled={adding}>\n          Отмена\n        </button>\n        <button \n          className={adding ? 'ServiceAdd-button-save button-spinner' : 'ServiceAdd-button-save'} \n          type='submit' \n          disabled={adding}>\n          {adding ? 'С' : 'Сохранить'}\n          {adding &&\n            <svg className=\"spinner ServiceAdd-button-spinner\" viewBox=\"0 0 50 50\">\n              <circle className=\"spinner-circle ServiceAdd-button-spinner-circle\" cx=\"25\" cy=\"25\" r=\"20\" fill=\"none\"></circle>\n            </svg> \n          }\n        </button>\n      </div>\n      {addingError && <p className=\"ServiceAdd-error\">{addingError}</p>}\n    </form>\n  );\n}\n\nexport default ServiceAdd;\n","import { useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { fetchServices, deleteService } from '../actions/actionCreators';\n\nfunction ServiceList(props) {\n  const { history } = props;\n  const { items, loading, error, deletingFinish } = useSelector(state => state.serviceList);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    fetchServices(dispatch);\n  }, [dispatch]);\n\n  useEffect(() => {\n    if (deletingFinish) {\n      fetchServices(dispatch);\n    }\n  }, [dispatch, deletingFinish]);\n\n  const handleError = () => {\n    fetchServices(dispatch);\n  }\n\n  const handleEdit = id => {\n    history.push(process.env.PUBLIC_URL + '/services/' + id);\n  }\n\n  const handleRemove = id => {\n    deleteService(dispatch, id);\n  }\n\n  if (error) {\n    return (\n      <>\n        <p className=\"error\">{error}</p>\n        <button className=\"error-button\" onClick={handleError}>Попробовать ещё раз</button>\n      </>\n    )\n  }\n\n  if (loading) {\n    return (\n      <svg className=\"spinner ServiceList-spinner\" viewBox=\"0 0 50 50\">\n        <circle className=\"spinner-circle ServiceList-spinner-circle\" cx=\"25\" cy=\"25\" r=\"20\" fill=\"none\"></circle>\n      </svg>\n    )\n  }\n\n  return (\n    <ul className=\"ServiceList\">\n      {items.map(o => (\n        <li className=\"ServiceList-item\" key={o.id}>\n          <p className=\"ServiceList-text\">{`${o.name}: ${o.price} руб.`}</p>\n          {!(o.deleting || o.isDeleted) && <button className=\"ServiceList-button-edit\" onClick={() => handleEdit(o.id)}>&#x270E;</button>}\n          <button \n            className={o.deleting || o.isDeleted ? 'ServiceList-button-delete button-spinner' : 'ServiceList-button-delete'} \n            disabled={o.deleting || o.isDeleted}\n            onClick={() => handleRemove(o.id)}>\n            &#x2715;\n            {(o.deleting || o.isDeleted) &&\n              <svg className=\"spinner ServiceList-button-spinner\" viewBox=\"0 0 50 50\">\n                <circle className=\"spinner-circle ServiceList-button-spinner-circle\" cx=\"25\" cy=\"25\" r=\"20\" fill=\"none\"></circle>\n              </svg> \n            }\n          </button>\n        </li>\n      ))}\n    </ul>\n  );\n}\n\nexport default ServiceList;\n","import { BrowserRouter as Router, Switch, Route, Redirect } from 'react-router-dom';\nimport './App.css';\nimport ServiceAdd from './components/ServiceAdd';\nimport ServiceList from './components/ServiceList';\n\nfunction App() { \n  return (\n    <Router>\n      <div className=\"App\">\n        <Switch>\n          <Route path={process.env.PUBLIC_URL + '/services/:id([0-9]+)'} component={ServiceAdd} />\n          <Route path={process.env.PUBLIC_URL + '/services'} component={ServiceList} />\n          <Redirect to={process.env.PUBLIC_URL + '/services'} />\n        </Switch>\n      </div>\n    </Router>\n  );\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import {\n  FETCH_SERVICES_REQUEST,\n  FETCH_SERVICES_FAILURE,\n  FETCH_SERVICES_SUCCESS,\n  DELETE_SERVICE_REQUEST,\n  DELETE_SERVICE_FAILURE,\n  DELETE_SERVICE_SUCCESS,\n} from '../actions/actionTypes'\n\nconst initialState = {\n  items: [],\n  loading: false,\n  error: null,\n  deletingFinish: false,\n};\n\nexport default function serviceListReducer(state = initialState, action) {\n  switch (action.type) {\n    case FETCH_SERVICES_REQUEST:\n      return {\n        ...state,\n        loading: true,\n        error: null,\n        deletingFinish: false,\n      };\n\n    case FETCH_SERVICES_FAILURE:\n      {\n        const { error } = action.payload;\n        return {\n          ...state,\n          loading: false,\n          error,\n        };\n      }\n\n    case FETCH_SERVICES_SUCCESS:\n      {\n        const { items } = action.payload;\n        return {\n          ...state,\n          items,\n          loading: false,\n          error: null,\n        };\n      }\n\n    case DELETE_SERVICE_REQUEST:\n      {\n        const { id } = action.payload;\n        return {\n          ...state,\n          items: state.items.map(o => o.id === id ? { ...o, deleting: true } : o)\n        };\n      }\n\n    case DELETE_SERVICE_FAILURE:\n      {\n        const { error } = action.payload;\n        return {\n          ...state,\n          error,\n        };\n      }\n\n    case DELETE_SERVICE_SUCCESS:\n      {\n        const { id } = action.payload;\n        const result = {\n          ...state,\n          items: state.items.map(o => o.id === id ? { ...o, deleting: false, isDeleted: true } : o),\n        };\n        return {\n          ...result,\n          deletingFinish: result.items.reduce((flag, o) => flag && !o.deleting, true),\n        };\n      }\n\n    default:\n      return state;\n  }\n}\n","import {\n  EDIT_SERVICE_REQUEST,\n  EDIT_SERVICE_FAILURE,\n  EDIT_SERVICE_SUCCESS,\n  CHANGE_SERVICE_FIELD,\n  ADD_SERVICE_REQUEST,\n  ADD_SERVICE_FAILURE,\n  ADD_SERVICE_SUCCESS,\n  ADD_SERVICE_FINISH,\n} from '../actions/actionTypes'\n\nconst initialState = {\n  item: { id: '', name: '', price: '', content: '' },\n  loading: false,\n  loadingError: null,\n  adding: false,\n  addingError: null,\n  finish: false,\n};\n\nexport default function serviceAddReducer(state = initialState, action) {\n  switch (action.type) {\n    case EDIT_SERVICE_REQUEST:\n      return {\n        ...state,\n        loading: true,\n        loadingError: null,\n        adding: false,\n        addingError: null,        \n      };\n\n    case EDIT_SERVICE_FAILURE:\n      const { loadingError } = action.payload;\n      return {\n        ...state,\n        loading: false,\n        loadingError,\n      };\n\n    case EDIT_SERVICE_SUCCESS:\n      const { item } = action.payload;\n      return {\n        ...state,\n        item,\n        loading: false,\n        loadingError: null,\n      };\n\n    case CHANGE_SERVICE_FIELD:\n      const { name, value } = action.payload;\n      return {\n        ...state,\n        item: {\n          ...state.item,\n          [name]: value,\n        }\n      };\n      \n    case ADD_SERVICE_REQUEST:\n      return {\n        ...state,\n        adding: true,\n        error: null,\n      };\n\n    case ADD_SERVICE_FAILURE:\n      const { addingError } = action.payload;\n      return {\n        ...state,\n        adding: false,\n        addingError,\n      };\n\n    case ADD_SERVICE_SUCCESS:\n      return {\n        ...state,\n        adding: false,\n        addingError: null,\n        finish: true,\n      };\n\n    case ADD_SERVICE_FINISH:\n      return { ...initialState };\n      \n    default:\n      return state;\n  }\n}\n","import { createStore, combineReducers } from \"redux\";\nimport serviceListReducer from '../reducers/serviceList';\nimport serviceAddReducer from '../reducers/serviceAdd';\n\nconst reducer = combineReducers({\n  serviceList: serviceListReducer,\n  serviceAdd: serviceAddReducer,\n});\n\nconst store = createStore(\n  reducer,\n  window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__(),\n);\n\nexport default store;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport store from './store';\nimport {Provider} from 'react-redux';\n\nReactDOM.render(<Provider store={store}><App /></Provider>, document.getElementById('root'));\n\nserviceWorker.unregister();\n"],"sourceRoot":""}